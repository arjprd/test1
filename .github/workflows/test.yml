name: PR Approval Check

on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  check-condition:
    name: Evaluate PR Changes
    runs-on: ubuntu-latest
    outputs:
      requires_approval: ${{ steps.set-output.outputs.requires_approval }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      # Example condition: Check if specific files were changed
      - name: Check for sensitive file changes
        run: |
          echo "SENSITIVE_FILES_CHANGED=true" >> $GITHUB_ENV
      
      # Set the output based on your condition
      - name: Set output
        id: set-output
        run: |
          if [[ "${{ env.SENSITIVE_FILES_CHANGED }}" == "true" ]]; then
            echo "requires_approval=true" >> $GITHUB_OUTPUT
          else
            echo "requires_approval=false" >> $GITHUB_OUTPUT
          fi

  # This job always runs and will be the required status check
  approval-status:
    name: Approval Status
    needs: check-condition
    runs-on: ubuntu-latest
    steps:
      - name: Check if approval needed
        id: check
        run: echo "Checking if approval is needed..."
        
      - name: Approval required
        if: needs.check-condition.outputs.requires_approval == 'true'
        run: |
          echo "Changes require approval before merging"
          # This exit code will cause the job to wait for the approval job
          exit 1
          
      - name: No approval needed
        if: needs.check-condition.outputs.requires_approval == 'false'
        run: echo "Changes don't require manual approval. Ready to merge."

  # This job only runs when approval is needed
  get-approval:
    name: Manual Approval
    needs: [check-condition, approval-status]
    if: needs.check-condition.outputs.requires_approval == 'true' && failure()
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}
    steps:
      - name: Approved âœ…
        run: echo "Manual approval granted. Ready to merge."
      
      # This is a key step - it creates a "check" status that GitHub can use
      # to determine if the PR can be merged
      - name: Update approval status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Approval Status',
              head_sha: context.payload.pull_request.head.sha,
              status: 'completed',
              conclusion: 'success'
            });